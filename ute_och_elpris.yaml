alias: _Ute och Elpris - F
description: >-
  Created by
  https://github.com/jonasniesner/open_epaper_link_homeassistant/wiki/Electricity-price-and-usage-costs
  Adapted by Andber8 - Find latest code
  @https://github.com/Andber8/homeassitant/blob/main/ute_och_elpris.yaml  
  To use create a new automation. Click the three dots in upper right corner.  
  Choose "Edit in YAML". Select all in the window seen and delete it and replace with this code.  
  Look at the bottom below "variables" and change at least the five first rows;
  myDisplayId: open_epaper_link.0000021FB8063B10 # Tag F
  sensorText: Utomhus
  tempSensor1: sensor.bedroom_sensor_2
  tempSensor2: sensor.temperature_70
  nordpoolSensor: sensor.nordpool_kwh_se3_sek_3_10_025 

  More info about openetags @https://github.com/jjwbruijn/OpenEPaperLink

trigger:
  - platform: time_pattern
    # Should fix this to use the variable updateInterval
    minutes: /15
    enabled: true

action:
  - enabled: true
    service: open_epaper_link.drawcustom
    target:
      entity_id: 
        - "{{myDisplayId}}"
    data:
      background: white
      rotate: 0
      dry-run: false
      payload:

# Linjer
        - type: line
          fill: red
          width: 2
          x_start: 135
          x_end: 135
          y_start: 0
          y_end: 105
        - type: line
          fill: red
          width: 2
          x_start: 0
          x_end: 296
          y_start: 105
          y_end: 105
# Ute text
        - type: text
          value: "{{sensorText}}"
          font: ppb.ttf
          x: 72
          y: 12
          size: 25
          color: black
          anchor: mm        

#Ute Temp
        - type: text
          #value: "{{ states('sensor.bedroom_sensor_2') }}"
          #value: "{{ [states('sensor.bedroom_sensor_2') , states('sensor.temperature_70')] | min | round(1) }}°C"
          value: "{{ [states(tempSensor1) , states(tempSensor2)] | min | round(1) }}°C"
          font: ppb.ttf
          x: 75
          y: 50
          size: 36
          color:
            black
          anchor: mm        
        
# Elpriset nu        
        - type: text
          value: 
            "{{ (currentprice | float(0)*100)|round() }}"
          font: ppb.ttf
          x: 224
          y: 25
          size: 50
          color: >-
            {{'black' if state_attr('nordpoolSensor',
            'low_price') == true else 'red' }}
          anchor: mm
        - type: text
          value: öre/kWh
          font: ppb.ttf
          x: 225
          y: 60
          size: 18
          color: black
          anchor: mm


# Temp 1
        - type: text
          value: "{{ states(tempSensor1)|round(1) }}"
          font: ppb.ttf
          x: 20
          y: 93
          size: 20
          color:
            black
          anchor: lm

# Temp 2
        - type: text
          value: "{{ states(tempSensor2)|round(1) }}"
          font: ppb.ttf
          x: 90
          y: 93
          size: 20
          color:
            black
          anchor: lm



#Lägsta priset
        - type: icon
          value: arrow-down
          x: 140
          y: 83
          size: 20
          color: black

        - type: text
          value: "{{ (lowprice | float(0)*100)|round() }}"
          font: ppb.ttf
          x: 170
          y: 93
          size: 20
          color:
            black
          anchor: lm


#Högsta priset
        - type: text
          value: "{{ (highprice | float(0)*100)|round() }}"
          font: ppb.ttf
          x: 277
          y: 93
          size: 20
          color:
            black
          anchor: rm
        - type: icon
          value: arrow-up
          x: 277
          y: 83
          size: 20
          color: black

# Uppdaterad        
        - type: text
          value: "Uppdaterad: {{now().strftime(\"%X\")}}"
          font: ppb.ttf
          x: 3
          y: 115
          size: 16
          color: black
          anchor: lm
mode: single
variables:
  myDisplayId: open_epaper_link.0000021FB8063B10 # Tag F
  sensorText: Utomhus
  tempSensor1: sensor.bedroom_sensor_2
  tempSensor2: sensor.temperature_70
  nordpoolSensor: sensor.nordpool_kwh_se3_sek_3_10_025
  updateInterval: "/15"
  priceCorrector: 0
  priceMultiplicator: 1
  graphLowestMaximum: 1
  spacing: "{{ range(16, 281, 24) | list }}"
  spacingwith: 7
  maxgrafhigh: 90
  grafbottom: 114
  grafpricesize: 10
  grafpriceoffset: 9
  time24:
    - "00"
    - "01"
    - "02"
    - "03"
    - "04"
    - "05"
    - "06"
    - "07"
    - "08"
    - "09"
    - "10"
    - "11"
    - "12"
    - "13"
    - "14"
    - "15"
    - "16"
    - "17"
    - "18"
    - "19"
    - "20"
    - "21"
    - "22"
    - "23"
  time: "{{ time24 + time24 }}"
  current_hour: "{{ now().hour }}"
  today: "{{ state_attr(nordpoolSensor, 'today') }}"
  tomorrow: "{{ state_attr(nordpoolSensor, 'tomorrow') }}"
  tomorrow_valid: "{{ state_attr(nordpoolSensor, 'tomorrow_valid') }}"
  fallback_tomorrow:
    - 9999.9999
    - 9999.9999
    - 9999.9999
    - 9999.9999
    - 9999.9999
    - 9999.9999
    - 9999.9999
    - 9999.9999
    - 9999.9999
    - 9999.9999
    - 9999.9999
    - 9999.9999
  prices: |-
    {% if tomorrow_valid %}
      {{ today + tomorrow }}
    {% else %}
      {{ today + fallback_tomorrow }}
    {% endif %}
  currentprice: >-
    {{ ((prices[current_hour] + priceCorrector) * priceMultiplicator) | round(2)
    }}
  next_12_hours_prices: "{{ prices[current_hour:current_hour+12] }}"
  pris2: "{{ next_12_hours_prices }}"
  lowprice: >-
    {{ (((next_12_hours_prices | min) + priceCorrector) * priceMultiplicator) |
    round(2) }}
  highprice: >-
    {{ (((next_12_hours_prices | max) + priceCorrector) * priceMultiplicator) |
    round(2) }}
  highpricegraph: "{{ [highprice | float, graphLowestMaximum] | max }}"
  sorted_prices: "{{ next_12_hours_prices | sort }}"
  lowprice3: "{{ sorted_prices[2] }}"
  highprice3: "{{ sorted_prices[:-3] | last }}"
